---
.retrieve_sysprobe_deps:
  - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/clang-$ARCH-11.0.1.tar.xz /tmp/clang.tar.xz
  - mkdir -p $DATADOG_AGENT_EMBEDDED_PATH
  - tar -xvf /tmp/clang.tar.xz -C $DATADOG_AGENT_EMBEDDED_PATH
  # Retrieve nikos from S3
  - $S3_CP_CMD $S3_PERMANENT_ARTIFACTS_URI/nikos-$ARCH.tar.gz /tmp/nikos.tar.gz
  - mkdir -p $NIKOS_EMBEDDED_PATH
  - tar -xf /tmp/nikos.tar.gz -C $NIKOS_EMBEDDED_PATH

# Run tests for eBPF code
.tests_linux_ebpf:
  stage: source_test
  artifacts:
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files

.tests_windows_sysprobe:
  stage: source_test
  needs: ["go_deps"]
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  script:
    - $ErrorActionPreference = "Stop"
    - '$_instance_id = (iwr  -UseBasicParsing http://169.254.169.254/latest/meta-data/instance-id).content ; Write-Host "Running on instance $($_instance_id)"'
    - docker run --rm -m 8192M -v "$(Get-Location):c:\mnt" -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -e PY_RUNTIMES="$PYTHON_RUNTIMES" -e GOMODCACHE="c:\modcache" 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_1809_${ARCH}:$Env:DATADOG_AGENT_WINBUILDIMAGES c:\mnt\tasks\winbuildscripts\sysprobe.bat
    - If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
  artifacts:
    when: always
    paths:
      - $DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files

tests_ebpf_x64:
  extends: .tests_linux_ebpf
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_x64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["runner:main"]
  needs: ["go_deps", "go_tools_deps"]
  variables:
    ARCH: amd64
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    - cd $SRC_PATH
    - !reference [.retrieve_sysprobe_deps]
  script:
    - inv -e system-probe.object-files
    - inv -e system-probe.kitchen-prepare --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/tests
    - inv -e install-tools
    - export PATH=$PATH:$GOPATH/bin
    - invoke -e security-agent.build-embed-syscall-tester
    # Compile runtime security functional tests to be executed in kitchen tests
    - inv -e security-agent.build-functional-tests --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/testsuite --build-flags "-race" --nikos-embedded-path=$NIKOS_EMBEDDED_PATH
    # Compile runtime security stress tests to be executed in kitchen tests
    - inv -e security-agent.build-stress-tests --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/stresssuite
    # Copy nikos archive to be extracted in kitchen tests
    - cp /tmp/nikos.tar.gz $DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/nikos.tar.gz
    # prepare files for comparison benchmarking
    - git reset --hard HEAD
    - git checkout origin/main
    - inv -e system-probe.object-files
    - inv -e system-probe.kitchen-prepare --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/main

tests_ebpf_arm64:
  extends: .tests_linux_ebpf
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/system-probe_arm64:$DATADOG_AGENT_SYSPROBE_BUILDIMAGES
  tags: ["runner:docker-arm", "platform:arm64"]
  needs: ["go_deps", "go_tools_deps"]
  variables:
    ARCH: arm64
  before_script:
    - !reference [.retrieve_linux_go_deps]
    - !reference [.retrieve_linux_go_tools_deps]
    # Hack to work around the cloning issue with arm runners
    - mkdir -p $GOPATH/src/github.com/DataDog
    - cp -R $GOPATH/src/github.com/*/*/DataDog/datadog-agent $GOPATH/src/github.com/DataDog
    - cd $SRC_PATH
    - !reference [.retrieve_sysprobe_deps]
  script:
    - inv -e system-probe.object-files
    - inv -e system-probe.kitchen-prepare --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/tests
    - inv -e install-tools
    - export PATH=$PATH:$GOPATH/bin
    - invoke -e security-agent.build-embed-syscall-tester --arch arm64
    # Compile runtime security functional tests to be executed in kitchen tests
    - inv -e security-agent.build-functional-tests --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/testsuite --build-flags "-race" --nikos-embedded-path=$NIKOS_EMBEDDED_PATH
    # Compile runtime security stress tests to be executed in kitchen tests
    - inv -e security-agent.build-stress-tests --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/stresssuite
    # Copy nikos archive to be extracted in kitchen tests
    - cp /tmp/nikos.tar.gz $DD_AGENT_TESTING_DIR/site-cookbooks/dd-security-agent-check/files/nikos.tar.gz
    # prepare files for comparison benchmarking
    - git reset --hard HEAD
    - git checkout origin/main
    - inv -e system-probe.object-files
    - inv -e system-probe.kitchen-prepare --output=$DD_AGENT_TESTING_DIR/site-cookbooks/dd-system-probe-check/files/default/main

tests_windows_sysprobe_x64:
  extends: .tests_windows_sysprobe
  variables:
    PYTHON_RUNTIMES: 3
    ARCH: "x64"
