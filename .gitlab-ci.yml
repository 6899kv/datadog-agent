---
include:
  - /.gitlab/setup.yml
  - /.gitlab/shared.yml
  - /.gitlab/maintenance_jobs.yml
  - /.gitlab/deps_build.yml
  - /.gitlab/package_deps_build.yml
  - /.gitlab/package_build.yml

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - unknown_failure
      - api_failure

stages:
  - .pre
  - maintenance_jobs
  - deps_build
  - deps_fetch
  - binary_build
  - package_deps_build
  - package_build

variables:
  # Directory in which we execute the omnibus build.
  # For an unknown reason, it does not go well with
  # a ruby dependency if we build directly into $CI_PROJECT_DIR/.omnibus
  OMNIBUS_BASE_DIR: /omnibus
  # Directory in which we put the artifacts after the build
  # Must be in $CI_PROJECT_DIR
  OMNIBUS_PACKAGE_DIR: $CI_PROJECT_DIR/omnibus/pkg/
  # Directory in which we put the SUSE artifacts after the SUSE build
  # Must be in $CI_PROJECT_DIR
  # RPM builds and SUSE RPM builds create artifacts with the same name.
  # To differentiate them, we put them in different folders. That also
  # avoids accidentally overwriting files when downloading artifacts from
  # both RPM and SUSE rpm jobs.
  OMNIBUS_PACKAGE_DIR_SUSE: $CI_PROJECT_DIR/omnibus/suse/pkg
  DD_AGENT_TESTING_DIR: $CI_PROJECT_DIR/test/kitchen
  STATIC_BINARIES_DIR: bin/static
  DOGSTATSD_BINARIES_DIR: bin/dogstatsd
  AGENT_BINARIES_DIR: bin/agent
  CLUSTER_AGENT_BINARIES_DIR: bin/datadog-cluster-agent
  CWS_INSTRUMENTATION_BINARIES_DIR: bin/cws-instrumentation
  CLUSTER_AGENT_CLOUDFOUNDRY_BINARIES_DIR: bin/datadog-cluster-agent-cloudfoundry
  SYSTEM_PROBE_BINARIES_DIR: bin/system-probe
  DEB_S3_BUCKET: apt.datad0g.com
  RPM_S3_BUCKET: yum.datad0g.com
  MACOS_S3_BUCKET: dd-agent-macostesting
  WIN_S3_BUCKET: dd-agent-mstesting
  PROCESS_S3_BUCKET: datad0g-process-agent
  BUCKET_BRANCH: dev # path inside the staging s3 buckets to release to: 'dev', 'nightly', 'oldnightly', 'beta' or 'stable'
  DEB_TESTING_S3_BUCKET: apttesting.datad0g.com
  RPM_TESTING_S3_BUCKET: yumtesting.datad0g.com
  WINDOWS_TESTING_S3_BUCKET_A6: pipelines/A6/$CI_PIPELINE_ID
  WINDOWS_TESTING_S3_BUCKET_A7: pipelines/A7/$CI_PIPELINE_ID
  WINDOWS_BUILDS_S3_BUCKET: $WIN_S3_BUCKET/builds
  DEB_RPM_TESTING_BUCKET_BRANCH: testing # branch of the DEB_TESTING_S3_BUCKET and RPM_TESTING_S3_BUCKET repos to release to, 'testing'
  S3_CP_OPTIONS: --only-show-errors --region us-east-1 --sse AES256
  S3_CP_CMD: aws s3 cp $S3_CP_OPTIONS
  S3_ARTIFACTS_URI: s3://dd-ci-artefacts-build-stable/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  S3_PERMANENT_ARTIFACTS_URI: s3://dd-ci-persistent-artefacts-build-stable/$CI_PROJECT_NAME
  S3_SBOM_STORAGE_URI: s3://sbom-root-us1-ddbuild-io/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  S3_RELEASE_ARTIFACTS_URI: s3://dd-release-artifacts/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  ## comment out both lines below (S3_OMNIBUS_CACHE_BUCKET and USE_S3_CACHING) to allow
  ## build to succeed with S3 caching disabled.
  S3_OMNIBUS_CACHE_BUCKET: dd-ci-datadog-agent-omnibus-cache-build-stable
  USE_S3_CACHING: --omnibus-s3-cache
  ## comment out the line below to disable integration wheels cache
  INTEGRATION_WHEELS_CACHE_BUCKET: dd-agent-omnibus
  S3_DD_AGENT_OMNIBUS_LLVM_URI: s3://dd-agent-omnibus/llvm
  S3_DD_AGENT_OMNIBUS_BTFS_URI: s3://dd-agent-omnibus/btfs
  GENERAL_ARTIFACTS_CACHE_BUCKET_URL: https://dd-agent-omnibus.s3.amazonaws.com
  S3_DSD6_URI: s3://dsd6-staging
  RELEASE_VERSION_6: nightly
  RELEASE_VERSION_7: nightly-a7

  # Build images versions
  # To use images from datadog-agent-buildimages dev branches, set the corresponding
  # SUFFIX variable to _test_only
  DATADOG_AGENT_BUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_BUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_WINBUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_WINBUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_ARMBUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_ARMBUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_SYSPROBE_BUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_KERNEL_MATRIX_TESTING_BUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_KERNEL_MATRIX_TESTING_BUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_NIKOS_BUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_NIKOS_BUILDIMAGES: v24931692-a06d857b
  DATADOG_AGENT_BTF_GEN_BUILDIMAGES_SUFFIX: ""
  DATADOG_AGENT_BTF_GEN_BUILDIMAGES: v24931692-a06d857b
  # To use images from test-infra-definitions dev branches, set the SUFFIX variable to -dev
  # and check the job creating the image to make sure you have the right SHA prefix
  TEST_INFRA_DEFINITIONS_BUILDIMAGES_SUFFIX: ""
  TEST_INFRA_DEFINITIONS_BUILDIMAGES: 67d2009bcd81
  DATADOG_AGENT_BUILDERS: v22276738-b36b132

  DATADOG_AGENT_EMBEDDED_PATH: /opt/datadog-agent/embedded
  DEB_GPG_KEY_ID: ad9589b7
  DEB_GPG_KEY_NAME: "Datadog, Inc. Master key"
  DEB_GPG_KEY_SSM_NAME: ci.datadog-agent.deb_signing_private_key_${DEB_GPG_KEY_ID}
  DEB_SIGNING_PASSPHRASE_SSM_NAME: ci.datadog-agent.deb_signing_key_passphrase_${DEB_GPG_KEY_ID}
  RPM_GPG_KEY_ID: fd4bf915
  RPM_GPG_KEY_NAME: "Datadog, Inc. RPM key"
  RPM_GPG_KEY_SSM_NAME: ci.datadog-agent.rpm_signing_private_key_${RPM_GPG_KEY_ID}
  RPM_SIGNING_PASSPHRASE_SSM_NAME: ci.datadog-agent.rpm_signing_key_passphrase_${RPM_GPG_KEY_ID}
  # docker.io authentication
  DOCKER_REGISTRY_LOGIN_SSM_KEY: docker_hub_login
  DOCKER_REGISTRY_PWD_SSM_KEY: docker_hub_pwd
  DOCKER_REGISTRY_URL: docker.io
  KITCHEN_INFRASTRUCTURE_FLAKES_RETRY: 2
  ARTIFACTORY_USERNAME: datadog-agent
  ARTIFACTORY_TOKEN_SSM_NAME: ci.datadog-agent.artifactory_token
  ARTIFACTORY_BYPASS_SSM_NAME: ci.datadog-agent.artifactory_bypass
  ARTIFACTORY_URL: datadog.jfrog.io
  ARTIFACTORY_GEMS_PATH: artifactory/api/gems/agent-gems
  ARTIFACTORY_PYPI_PATH: artifactory/api/pypi/agent-pypi/simple
  CLANG_LLVM_VER: 12.0.1
  KERNEL_MATRIX_TESTING_X86_AMI_ID: "ami-00e807c0351f270b7"
  KERNEL_MATRIX_TESTING_ARM_AMI_ID: "ami-0be4fd85ce146ab3b"
